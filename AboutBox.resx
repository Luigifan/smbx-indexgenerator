<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJ4AAAD4CAYAAAAdKF88AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGL1JREFUeF7tnaGPZFd2h/vPMFzosAlzmBXkMCvIWTRwpRBHIRuFGFpBAxaMVgEL
        TSIZWpEiLRwULbQUYpaBhsMm86vpr/PrX5/73qvpqnrdt46lT+e+c+6tqj7n29vT7dndm2++f/u+aS5N
        i9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsQovX7EKL1+xC
        i9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsQovX7EKL1+xC
        i9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsQovX7EKL1+xCi9fsws3LVx8XHTteMh5uvK2bO3Y8Vewb
        r+MusW+8jrvEvvE67hL7xuu4S+wbr+MusW+8jrvEvvE67hIP4jXNpWnxml1o8ZpdaPGaXWjxml1o8Zpd
        aPGai/DixYt7tHjN2UG2X3746v2vP7880OI1ZyeluxPvd68/bujY8RxR4v30/UdevfzNgZuthzt2/NTo
        Nx4C9o3X8ezRxVMUfeN1PHssv9VuPdyx46fG/Fbbf8breJGY32r7z3gdLxJL8VRsmnOCeOLer1Oa5pzk
        Dxd94zUXAfH4Nqt49eJ9/vnnd1R1sVZvlpF43HTQ4n0Q6u3Lr9//8PXNnVyIBtQgX6NZRuIhX/8Z7xaJ
        9Ourb+7J9+43X9yh599/+VE47RMt3/EgHxzE+/ZPH4vXGF08Cfbm5rM7XD7VU7wtr9+xjjdbNs0ckUog
        nHIV7NN66+t3rGPfeB8k+tPNzR0uWgXibX39jnXsG++DRC4ct1pCXWx53Y7L8apvPJdJSDD/c1xGfRtG
        0i2v33Ecr/rGc6nEMeJtef2O43i1Nx5CIRW4fOLdT9/doXrfeKeJhxvvGnHJ+DMcz6xTQheves1mO1cr
        nnDBXDqHmueq12qO46rFEymY325J33an4+rFEy4XAjrK5w8WzeO4+f0PHxfXGpEKEDBBuq2v23E5Hm68
        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
        RU5ErkJggg==
</value>
  </data>
</root>